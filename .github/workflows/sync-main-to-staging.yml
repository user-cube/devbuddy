name: Sync main to staging

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}
  # Ensure sync runs even when release commit contains [skip ci]
  workflow_run:
    workflows: [ "release" ]
    types: [ completed ]

concurrency:
  group: sync-main-to-staging
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    name: Attempt fast sync (merge) main -> staging
    runs-on: ubuntu-latest
    # Run for push/workflow_dispatch, or when the release workflow completed successfully
    if: |
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    steps:
    - name: Create GitHub App token
      id: app
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ secrets.DEVOPS_BUDDY_APP_ID }}
        private-key: ${{ secrets.DEVOPS_BUDDY_PRIVATE_KEY }}
    - name: Checkout for diff check
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.app.outputs.token }}
    - name: Compute main vs staging difference
      id: diff
      shell: bash
      run: |
        git fetch --no-tags --prune origin +refs/heads/main:refs/remotes/origin/main +refs/heads/staging:refs/remotes/origin/staging
        MAIN=$(git rev-parse remotes/origin/main)
        STAGING=$(git rev-parse remotes/origin/staging)
        echo "main=$MAIN" >> $GITHUB_OUTPUT
        echo "staging=$STAGING" >> $GITHUB_OUTPUT
        if [ "$MAIN" = "$STAGING" ]; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    - name: Merge main into staging
      id: merge
      uses: devmasx/merge-branch@v1.4.0
      with:
        type: now
        from_branch: main
        target_branch: staging
        github_token: ${{ steps.app.outputs.token }}
      if: steps.diff.outputs.changed == 'true'

  open-pr-on-conflict:
    name: Open PR if merge cannot be applied cleanly
    runs-on: ubuntu-latest
    needs: auto-merge
    # If the previous job failed (e.g., conflicts), create a PR instead
    if: ${{ needs.auto-merge.result == 'failure' }}
    steps:
    - name: Create GitHub App token
      id: app
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ secrets.DEVOPS_BUDDY_APP_ID }}
        private-key: ${{ secrets.DEVOPS_BUDDY_PRIVATE_KEY }}
    - name: Create PR main -> staging
      uses: repo-sync/pull-request@v2
      env:
        GITHUB_TOKEN: ${{ steps.app.outputs.token }}
      with:
        source_branch: main
        destination_branch: staging
        pr_title: "chore(sync): main â†’ staging"
        pr_body: |
          Automated sync from main to staging.
          This PR was created because an automatic merge could not be applied cleanly.
        pr_label: auto-sync
        pr_draft: false
